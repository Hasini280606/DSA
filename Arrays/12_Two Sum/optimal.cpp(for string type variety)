// 🚀 Problem: Two Sum
// 📌 Category: Arrays
// 📝 Problem Statement:
//  Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

// You may assume that each input would have exactly one solution, and you may not use the same element twice.

// You can return the answer in any order.

// 🔗 Problem Link (if on LeetCode/GFG):
//    https://leetcode.com/problems/two-sum/description/

// 🎯 Approach: optimal(for returning string type variety)
// 🕒 Time Complexity: O(N) + O(NlogN)
// 🛢️ Space Complexity: O(1)
//
// ✍️ Author: Shakkara Hasini
// 📅 Date: 2025-07-27


#include <bits/stdc++.h>
using namespace std;

string twoSum(int arr[],int n,int target){
    int left = 0; int right = n-1;
    sort(arr,arr+n);
    while(left < right){
        int sum = arr[left] + arr[right];
        if(sum==target) return "YES";
        else if(sum<target) left++;
        else right--;
    }
    cout << "NO";
}


int main() {
    int n;
    cout << "Enter the size of array:  ";
    cin >> n;

    int target;
    cout << "Enter the value of target: ";
    cin >> target;

    int arr[n]; 
    for(int i=0;i<n;i++){
        cout << "Enter the element " << i+1 << ": ";
        cin >> arr[i];
    }

    cout << "Array: ";
    for(int i=0;i<n;i++){
        cout << arr[i] << " ";
    }
    cout << endl;
    
    string sol = twoSum(arr,n,target);
    cout << sol;
    return 0;
}
